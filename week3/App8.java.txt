/*
 * CASTING
 * To understand generics better
 */
package ds2021;

/**
 *
 * @author Zati
 */
public class App8 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        
        // Numerical casting 
        byte bytevalue = 20;            // class Byte
        short shortvalue = 55;  
        int intval = 100;               // class Integer
        long longval = 23554567;
        float floatval = 473984.33f;    // need to add 'f' at end of value
        float floatval2 = (float)473984.33;
        double doubleval = 2984.359875;     // class Double
        
        System.out.println(Byte.MAX_VALUE);     // try out other methods by the Class
        
        System.out.println(floatval);
        intval = (int)longval;
        
        bytevalue = (byte)128;
        
        int a = (int)floatval2;
        System.out.println("a = " + a);
        
        
        // Upcasting and Downcasting
        Machine2 mac1 = new Machine2();
        Camera2 cam1 = new Camera2();
        
        mac1.start();
        cam1.start();
        cam1.snap();
        
        // example of upcasting in polymorphism 
        Machine2 mac2 = cam1;
        mac2.start();
        
        Machine2 mac3 = new Camera2();
        mac3.start();
        
        // example of downcasting 
        Camera2 cam2 = (Camera2)new Machine2();       // error because JAVA really wants you to know what you are doing!
        Camera2 cam3 = (Camera2)mac1;                   // need to 
        
    }
           
}

class Machine2{
    public void start(){
        System.out.println("Machine2 started...");
    }

}
 
class Camera2 extends Machine2{
    public void start(){
        System.out.println("Camera2 started...");
    }
    
    public void snap(){
        System.out.println("Photo taken...");
    }
    

}