/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ds2021;

/**
 * STACK IMPLEMENTATION
 * Operations: PUSH, POP, Check IF EMPTY, Check IF FULL, PEEK 
 * There is a POINTER
 * BOTTOM UP approach
 * LIFO: Last In First Out
 * 
 * @author Zati
 */

class Stack{
    
    // declare some local variables for class Stack
    int maxSize;        // max size for our stack
    int top;            // this is our pointer, should point to the last position we left it
    String arr[];       // creating array of type String to contain String data
    

    public Stack(int n){
        this.maxSize = n;
        arr = new String[maxSize];          // need to initialize the array as Object of String with maxSize
        top = 0;                            // top pointer initialize to index [0]
    }
    
    public boolean isEmpty(){
        if(top == 0){
            return true;
        }
        else{
            return false;
        }
    }
    
    public void push(String str){
        
        if (top < maxSize){                     // logic: only push data when stack in not full
            arr[top] = str;                     // where the pointer is, push only string value
            top++;                              // before leaving push method, put pointer to the next cell
        }
        else{
            System.out.println("Stack is full!!");
        }
    }
    
    public String pop(){
        if(!isEmpty()){
        // you can pop
            String temp = peek();       // good to check what we want to pop
            arr[top-1] = null;          // pop element
            top--;                      // before leaving pop method, decrease pointer below
            return temp;
        
        }
        else{
            return null;
        }
    }
    
    public String peek(){               // the method that check the last element inserted into stack
        
        //if (top > 0){                 // when top is not at 0, something has been pushed into the stack
        if(!isEmpty()){
            return arr[top-1];          // return the [top-1]
        }
        else{
            return null;                // otherwise, stack must be empty 
        }
    }
    
    public void displayArray(){
        for (int i = 0; i < top; i++) {
            System.out.println(arr[i]);
        }
    }
    
}

public class App10 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // PUSH, POP, isEMPTY, PEEK
        Stack myStack = new Stack(4);       // we want stack to contain 4 elements
        
        myStack.push("banana");
        myStack.push("banana");
        myStack.pop();
        myStack.push("banana");
        myStack.push("banana");
        myStack.pop();
        myStack.displayArray();
        
    }
    
}